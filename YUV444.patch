diff --git a/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_video.c b/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_video.c
index 16b1bb8..231a58e 100644
--- a/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_video.c
+++ b/drivers/amlogic/media/vout/hdmitx/hdmi_tx_20/hdmi_tx_video.c
@@ -587,20 +587,28 @@ int hdmitx_set_display(struct hdmitx_dev *hdev, enum hdmi_vic VideoCode)
 	hdev->cur_video_param = param;
 	if (param) {
 		param->color = param->color_prefer;
+		pr_info(VID "rx edid only support param->color formatnative_Mode==%x\n",(hdev->RXCap.native_Mode & 0x30));
 		/* HDMI CT 7-24 Pixel Encoding
 		 * YCbCr to YCbCr Sink
 		 */
 		switch (hdev->RXCap.native_Mode & 0x30) {
 		case 0x20:/*bit5==1, then support YCBCR444 + RGB*/
 		case 0x30:
+		case 0:	
 			param->color = COLORSPACE_YUV444;
+		pr_info(VID "rx edid only support param->color formatYUV444==%d\n",param->color);
 			break;
 		case 0x10:/*bit4==1, then support YCBCR422 + RGB*/
 			param->color = COLORSPACE_YUV422;
+		pr_info(VID "rx edid only support param->color formatYUV422==%d\n",param->color);
 			break;
 		default:
 			param->color = COLORSPACE_RGB444;
+		pr_info(VID "rx edid only support param->color formatRGB444==%d\n",param->color);
+
 		}
+		
+		pr_info(VID "rx edid only support param->color format==%d\n",param->color);
 		/* For Y420 modes */
 		switch (VideoCode) {
 		case HDMI_3840x2160p50_16x9_Y420:
